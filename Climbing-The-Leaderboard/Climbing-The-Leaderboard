#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'climbingLeaderboard' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY ranked
#  2. INTEGER_ARRAY player
#
   
def calculatePosition(play, rank):
    position=0
    for i in range(len(rank)):
        if play>rank[i]:
            position=len(rank)-i
        elif play==rank[i]:
            position=len(rank)-i
            break
        elif play<rank[i]:
            position=len(rank)-i+1
            break
    return position
            
def climbingLeaderboard(ranked, player):
    # Write your code here
    noduplicates=sorted(list(set(ranked)))
    positions=[]
    for play in player:
        a=calculatePosition(play, noduplicates)
        positions.append(a)

    return positions


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ranked_count = int(input().strip())

    ranked = list(map(int, input().rstrip().split()))

    player_count = int(input().strip())

    player = list(map(int, input().rstrip().split()))

    result = climbingLeaderboard(ranked, player)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()

